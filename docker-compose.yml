version: "3.7"
services:
    frontend:
        container_name: frontend
        restart: unless-stopped
        build:
            context: client
            dockerfile: Dockerfile
        expose:
            - "3000"
        volumes:
            - ./client:/app
            - /app/node_modules
            - /app/.next
        ports:
            - "3000:3000"

    backend:
        container_name: backend
        restart: unless-stopped
        build:
            context: nest
            dockerfile: Dockerfile
        volumes:
            - ./nest:/app
            - /app/node_modules
            - /app/dist
        expose:
            - "5000"
        ports:
            - "5000:5000"
        depends_on:
            - redis
            - postgres
        networks:
            - postgres

    redis:
        container_name: redis
        image: "redis:alpine"
        restart: unless-stopped
        expose:
            - "6379"
        ports:
            - "6379:6379"

    postgres:
        container_name: postgres
        image: postgres:latest
        restart: unless-stopped
        env_file:
            - docker.env
        expose:
            - "5432"
        ports:
            - 5432:5432
        volumes:
            - data:/var/lib/postgresql
        networks:
            - postgres

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        restart: unless-stopped
        depends_on:
            - postgres
        env_file:
            - docker.env
        expose:
            - "80"
        ports:
            - "80:80"
        networks:
            - postgres

volumes:
    data:

networks:
    postgres:
        driver: bridge

# docker-compose build --no-cache
# docker-compose up --build --force-recreate